server:
  port: 8000
spring:
  application:
    name: microservice-provider-user
  jpa:
    generate-ddl: false
    show-sql: true
    hibernate:
      ddl-auto: none
  datasource:                     # 指定数据源
    platform: h2                  # 指定数据源类型
    schema: classpath:schema.sql  # 指定h2数据库的建表脚本
    data: classpath:data.sql      # 指定h2数据库的数据脚本
eureka:
  client:
    serviceUrl:
      defalutZone: http://user:password123@localhost:8761/eureka/
      #defalutZone: http://peer1:8761/eureka/,http://peer2:8762/eureka/
  instance:
    prefer-ip-address: true # true则将自己的IP注册到Eureka Server. 否则注册微服务所在的OS的hostname到Eureka Server

security:
  basic:
    enabled: true

management:
    security:
      enabled: false

logging:
  level:
    root: INFO
    org.hibernate: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE        # 打印sql的日志类: 日志示例：o.h.type.descriptor.sql.BasicBinder  : binding parameter [1] as [BIGINT] - [1]
    org.hibernate.type.descriptor.sql.BasicExtractor: TRACE     #打印sql的日志类: 获取列名和value extracted value ([age2_0_0_] : [INTEGER]) - [20]

info:
    app:
      name: @project.artifactId@
      encoding: @project.build.sourceEncoding@
      java:
        source: @java.version@
        target: @java.version@

